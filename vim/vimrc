"different setting between different os
if has("win32") || has("win16")
    set rtp+=~/vimfiles/bundle/Vundle.vim/
    let path='~/vimfiles/bundle'
else 
    set rtp+=~/.vim/bundle/Vundle.vim
endif

set nocompatible
filetype plugin indent on
syntax on

"==================================================
" plugins
if has("win32") || has("win16")
    call vundle#begin(path)
else 
    call vundle#begin()
endif
"Vundle
Plugin 'gmarik/Vundle.vim'

"snippets
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

" auto closing brackets
Plugin 'jiangmiao/auto-pairs'

" color scheme
Plugin 'BusyBee'
Plugin 'altercation/vim-colors-solarized'
Plugin 'goatslacker/mango.vim'

" status line
Plugin 'bling/vim-airline'

" show marks
Plugin 'kshenoy/vim-signature'

" multiple line edit
Plugin 'terryma/vim-multiple-cursors'

" operate on surroundings
Plugin 'tpope/vim-surround'

" directory tree
Plugin 'scrooloose/nerdtree'

" tagbar
Plugin 'majutsushi/tagbar'
Plugin 'marijnh/tern_for_vim'

Plugin 'tpope/vim-fugitive'

" quick file finder 
Plugin 'kien/ctrlp.vim'

" smooth scroll when pressing ctrl+d or ctrl u
Plugin 'joeytwiddle/sexy_scroller.vim'

" javascript related
" for the autoformat to work for javascript, first need to install a global
" node modue, npm install -g js-beautify
Plugin 'Chiel92/vim-autoformat'
Plugin 'pangloss/vim-javascript' 

" mark down
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
call vundle#end()
"==================================================

"markdown file extension recognization
au BufRead,BufNewFile *.md set filetype=markdown

" always show status line
set laststatus=2

" no swap file
set noswapfile

" turn on wildmenu
set wildmenu

" access system clipboard
set clipboard=unnamed

" search ignore case by default
set ic

" highlight search
set hls

" increment search
set is

" map leader to space
let mapleader=" "

"no line wrap
set nowrap

" appearence 
set background=light
if &term =~ "^xterm"
    let g:solarized_termcolors=256
endif
colorscheme solarized
set number

" indention
set smartindent
set autoindent
set tabstop=4
set shiftwidth=4
set expandtab

" code format
nmap <leader>f :Autoformat<cr>

" ctrlp settings
let g:ctrlp_working_path_mode=0  
let g:ctrlp_max_files=0
let g:ctrlp_max_height=20


" press enter to insert new lines
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>


" Smart way to manage windows
nmap <leader>h <c-w>h
nmap <leader>j <c-w>j
nmap <leader>k <c-w>k
nmap <leader>l <c-w>l
nmap <leader>c <c-w>c
nmap <leader>H <c-w>H
nmap <leader>J <c-w>J
nmap <leader>K <c-w>K
nmap <leader>L <c-w>L
nmap <leader>o <c-w>o
nmap <leader>w <c-w>

" toggle tag bar
nmap <leader>tb :TagbarToggle<CR>

" quick insert semicolon at the end of the line
nmap <leader>; A;<Esc>

" nerdtree 
nmap  <leader>nd :NERDTreeToggle<cr>
let g:nerdtree_tabs_open_on_gui_startup=0 

"cursor shape change in different mode in iterm2
if $TERM_PROGRAM =~ "iTerm"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
elseif &term =~ "^xterm"
    let &t_SI .= "\<Esc>[5 q"
    let &t_EI .= "\<Esc>[2 q"
endif
